// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpotifyShuffler.Database;

namespace SpotifyShuffler.Migrations
{
    [DbContext(typeof(OperationContext))]
    [Migration("20200722103231_OpMigration")]
    partial class OpMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("SpotifyShuffler.Database.Operation", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CanceledAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedPlaylistId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OriginalPlaylistDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalPlaylistId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalPlaylistName")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaylistDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaylistName")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PlaylistPrototypeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistPrototypeId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("SpotifyShuffler.Database.PlaylistPrototype", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlaylistPrototype");
                });

            modelBuilder.Entity("SpotifyShuffler.Database.TrackPrototype", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Album")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<int>("DurationMs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PlaylistPrototypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpotifyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpotifyUri")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistPrototypeId");

                    b.ToTable("TrackPrototypes");
                });

            modelBuilder.Entity("SpotifyShuffler.Database.Operation", b =>
                {
                    b.HasOne("SpotifyShuffler.Database.PlaylistPrototype", "Prototype")
                        .WithMany()
                        .HasForeignKey("PlaylistPrototypeId");
                });

            modelBuilder.Entity("SpotifyShuffler.Database.TrackPrototype", b =>
                {
                    b.HasOne("SpotifyShuffler.Database.PlaylistPrototype", "PlaylistPrototype")
                        .WithMany("Tracks")
                        .HasForeignKey("PlaylistPrototypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
